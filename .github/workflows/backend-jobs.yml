on:
  workflow_call:
    inputs:
      container-registry:
        required: true
        type: string
      container-image-name:
        required: true
        type: string
      container-image-version:
        required: true
        type: string

jobs:
  validate-gradle-wrapper-and-setup-gradle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v3
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

  backend-build:
    needs: [validate-gradle-wrapper-and-setup-gradle]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "21.0"
          distribution: "temurin"
          cache: gradle
      - name: Build backend
        working-directory: ./backend
        run: ./gradlew build --profile -x integrationTest -x test
      - name: Upload build performance report
        uses: actions/upload-artifact@v4
        with:
          name: performance-report
          path: backend/build/reports/profile/profile*.html
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  backend-unit-tests:
    needs: [validate-gradle-wrapper-and-setup-gradle]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "21.0"
          distribution: "temurin"
          cache: gradle
      - name: Run unit tests
        working-directory: ./backend
        run: ./gradlew test -x integrationTest
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  backend-integration-tests:
    needs: [validate-gradle-wrapper-and-setup-gradle]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "21.0"
          distribution: "temurin"
          cache: gradle
      - name: Run integration tests
        working-directory: ./backend
        run: ./gradlew integrationTest -x test
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  audit-licenses-backend:
    needs: [validate-gradle-wrapper-and-setup-gradle]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "21.0"
          distribution: "temurin"
          cache: gradle
      - name: Check licenses
        working-directory: ./backend
        run: ./gradlew checkLicense
      - name: Upload licence report
        uses: actions/upload-artifact@v4
        with:
          name: backend-licence-report.csv
          retention-days: 3
          path: backend/build/reports/dependency-license/backend-licence-report.csv
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf
        if: ${{ failure() && github.ref == 'refs/heads/main'}}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  analyze-backend-with-sonar-cube:
    needs: [validate-gradle-wrapper-and-setup-gradle]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "21.0"
          distribution: "temurin"
          cache: gradle
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
      - name: Scan with SonarQube
        working-directory: ./backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar --info
      - name: Check SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@72f24ebf1f81eda168a979ce14b8203273b7c3ad
        with:
          scanMetadataReportFile: backend/build/sonar/report-task.txt
        timeout-minutes: 3 # Force to fail step after specific time
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  generate-backend-code-documentation:
    needs: [validate-gradle-wrapper-and-setup-gradle]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "21.0"
          distribution: "temurin"
          cache: gradle
      - name: Run Javadoc
        working-directory: ./backend
        run: ./gradlew javadoc
      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: backend-code-documentation
          retention-days: 3
          path: backend/build/docs/javadoc/
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  push-reports:
    runs-on: ubuntu-latest
    env:
      reports-repo: digitalservicebund/ris-reports
    needs:
      - backend-build
      - generate-backend-code-documentation
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ env.reports-repo }}
          ssh-key: ${{ secrets.REPORTS_DEPLOY_KEY }}
      - name: Setup git config
        run: |
          git config user.name "${{ github.repository }}"
          # This email identifies the commit as GitHub Actions - see https://github.com/orgs/community/discussions/26560
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Backend Code Documentation - Download
        uses: actions/download-artifact@v4
        with:
          name: backend-code-documentation
          path: tmp/backend-code-documentation/
      - name: Java - git add report
        uses: digitalservicebund/add-ris-report@32770d369cf00a8154bb6a17005d11cf781bfba3
        with:
          filePath: tmp/backend-code-documentation
          destinationDir: norms-code-documentation/java
          reportIsDirectory: true
      - name: Push reports
        run: |
          git diff-index --cached --quiet HEAD ||
            git commit \
              -m ${{ toJSON(github.event.head_commit.message) }} \
              -m "From commit: ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}" &&
            git push origin main &&
            echo "Pushed reports to ${{ github.server_url }}/${{ env.reports-repo }}" >> $GITHUB_STEP_SUMMARY
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
