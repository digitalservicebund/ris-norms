name: Pipeline

on:
  # run on any branch receiving a push (not only on main)
  push:
  # also: every morning at 8am
  schedule:
    - cron: "0 6 * * *"
  # also: allow to run this workflow manually
  workflow_dispatch:

jobs:
  #############################################
  # jobs dispatched to a separate workflow file
  #############################################

  time-machine-jobs:
    uses: ./.github/workflows/time-machine-jobs.yml
    secrets: inherit # e.g. sonar token

  frontend-jobs:
    permissions:
      security-events: write # upload-sarif
      packages: write
      id-token: write
      contents: read
    uses: ./.github/workflows/frontend-jobs.yml
    with:
      # It would be nicer if we used the env vars defined above (as not to duplicate information),
      # however, env vars cannot be passed over to a reuseable workflow using "with"
      # cf. https://docs.github.com/en/actions/using-workflows/reusing-workflows#limitations
      # and the workaround is horrible
      # cf. https://docs.github.com/en/actions/using-workflows/reusing-workflows#using-outputs-from-a-reusable-workflow
      container-registry: ghcr.io
      container-image-name: ${{ github.repository }}
      container-image-version: ${{ github.sha }}
    secrets: inherit # e.g. sonar token

  vscode-extension-jobs:
    uses: ./.github/workflows/vscode-extension-jobs.yml
    secrets: inherit # e.g. sonar token

  ###############################
  # build release from artifacts
  ###############################

  release-time-machine-and-vscode-extension:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - time-machine-jobs
      - vscode-extension-jobs
      - trivy-scan
      - talisman-check
    permissions:
      contents: write # action-gh-release
    steps:
      # --> reading the release version
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./vscode-extension/package.json
          cache: npm
          cache-dependency-path: ./vscode-extension/package-lock.json
      - name: Extract Extension Version (= release version)
        id: package_version
        run: echo "VERSION=$(node -p "require('./vscode-extension/package.json').version")" >> $GITHUB_ENV
      # <---
      - uses: actions/download-artifact@v4
        with:
          name: vscode-extension-vsix
          path: downloaded-artifacts
      - uses: actions/download-artifact@v4
        with:
          name: time-machine-install
          path: downloaded-artifacts
      - name: Zip Release locally
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: "zip"
          filename: "ris-norms-release.zip"
          directory: downloaded-artifacts
      - name: Create and Upload Pre-Release for VSCode Extension and time-machine
        uses: softprops/action-gh-release@v1
        with:
          files: downloaded-artifacts/ris-norms-release.zip
          tag_name: v${{ env.VERSION }}-${{ github.run_number }}
          name: v${{ env.VERSION }}-${{ github.run_number }} RIS-Norms VSCode Extension + Time Machine
          draft: false
          prerelease: true
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Send status to Slack
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: digitalservicebund/notify-on-failure-gha@15dd05b628141b7bac0ad26e08c1935cb3ba6bc8 # v1.4.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  ########################
  # system test jobs
  ########################

  check-style-system-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./system-tests/package.json
          cache: npm
          cache-dependency-path: ./system-tests/package-lock.json
      - name: Cache npm cache
        uses: actions/cache@v4
        id: cache-npm-cache
        with:
          # The docs discourage caching `node-modules`, cf. https://github.com/actions/cache/blob/main/examples.md#node---npm
          path: /home/runner/.npm
          key: npm-cache-${{ hashFiles('./system-tests/package-lock.json') }}
      - name: Install node modules
        run: npm ci
        working-directory: ./system-tests
      - name: Check style
        run: npm run style:check
        working-directory: ./system-tests
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@15dd05b628141b7bac0ad26e08c1935cb3ba6bc8 # v1.4.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  audit-licenses-system-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./system-tests/package.json
          cache: npm
          cache-dependency-path: ./system-tests/package-lock.json
      - name: Cache npm cache
        uses: actions/cache@v4
        id: cache-npm-cache
        with:
          # The docs discourage caching `node-modules`, cf. https://github.com/actions/cache/blob/main/examples.md#node---npm
          path: /home/runner/.npm
          key: npm-cache-${{ hashFiles('./system-tests/package-lock.json') }}
      - name: Install node modules
        run: npm ci
        working-directory: ./system-tests
      - name: Run license scanner
        run: npm run audit:licences
        working-directory: ./system-tests
      - name: Upload licence report
        uses: actions/upload-artifact@v4
        with:
          name: system-tests-licence-report.csv
          retention-days: 3
          path: system-tests/licence-report.csv
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@15dd05b628141b7bac0ad26e08c1935cb3ba6bc8 # v1.4.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  ################
  # Security jobs
  ################

  trivy-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write # upload-sarif
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@d43c1f16c00cfd3978dde6c07f4bbcf9eb6993ca
        with:
          scan-type: "fs"
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH" #ignored by sarif report
      - name: Check trivy results
        run: |
          if grep -qE 'HIGH|CRITICAL' trivy-results.sarif; then
            echo "Vulnerabilities found"
            exit 1
          else
            echo "No significant vulnerabilities found"
            exit 0
          fi
      - name: Upload Trivy scan results to GitHub Security tab
        if: ${{ always() && github.ref == 'refs/heads/main' }} # Bypass non-zero exit code..
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"
      - name: Send status to Slack
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: digitalservicebund/notify-on-failure-gha@15dd05b628141b7bac0ad26e08c1935cb3ba6bc8 # v1.4.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  talisman-check:
    runs-on: ubuntu-latest
    # Running on main only https://digitalservicebund.slack.com/archives/C046VD44ZEH/p1706516240974409
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Detect secrets in incoming commits with Talisman
        uses: digitalservicebund/talisman-secrets-scan-action@9a4cb85589e29a62b4546eb566119753a5680aeb
      - name: Send status to Slack
        # only on failure and if on "main" branch
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        uses: digitalservicebund/notify-on-failure-gha@15dd05b628141b7bac0ad26e08c1935cb3ba6bc8 # v1.4.0
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # TODO -  COMMENTED OUT BECAUSE NO USAGE RIGHT NOW BUT IT WILL BE NEEDED SOON
  ###############################
  # vscode-server create docker image and deploy on staging
  ###############################

  backend-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get Gradle version
        working-directory: ./backend
        run: |
          echo "GRADLE_VERSION=$(sed -n 's/.*gradle-\([0-9]*\(\.[0-9]*\)*\)-.*/\1/p' ./gradle/wrapper/gradle-wrapper.properties)" >> $GITHUB_ENV
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "21.0"
          distribution: "temurin"
      - uses: gradle/gradle-build-action@3b1b3b9a2104c2b47fbae53f3938079c00c9bb87
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}
          arguments: build --profile -x integrationTest -x test
          build-root-directory: ./backend
      - name: Upload build performance report
        uses: actions/upload-artifact@v3
        with:
          name: performance-report
          path: backend/build/reports/profile/profile*.html
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@15dd05b628141b7bac0ad26e08c1935cb3ba6bc8
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  ###############################
  # vscode-server create docker image and deploy on staging
  ###############################

  #  vscode-server-create-and-push-docker-image:
  #    runs-on: ubuntu-latest
  #    if: ${{ github.ref == 'refs/heads/main' }}
  #    needs:
  #      - build-time-machine
  #      - unit-tests-time-machine
  #      - build-and-pack-vscode-extension
  #      - analyze-time-machine
  #      - audit-licenses-time-machine
  #      - audit-licenses-vscode-extension
  #      - analyze-vscode-extension
  #      - trivy-scan
  #      - talisman-check
  #    permissions:
  #      contents: read
  #      id-token: write # This is used to complete the identity challenge with sigstore/fulcio..
  #      packages: write
  #    steps:
  #      # --> reading the release version
  #      - uses: actions/checkout@v4
  #      - name: Setup Node
  #        uses: actions/setup-node@v4
  #        with:
  #          node-version-file: ./vscode-extension/package.json
  #          cache: npm
  #          cache-dependency-path: ./vscode-extension/package-lock.json
  #      - uses: actions/download-artifact@v4
  #        with:
  #          name: vscode-extension-vsix
  #          path: vscode-extension
  #      - uses: actions/download-artifact@v4
  #        with:
  #          name: time-machine-install
  #          path: time-machine/build/install
  #      - name: Build docker image
  #        run: docker build --tag ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_IMAGE_NAME }}:${{ env.CONTAINER_IMAGE_VERSION }} .
  #      - name: Log into container registry
  #        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
  #        with:
  #          registry: ${{ env.CONTAINER_REGISTRY }}
  #          username: ${{ github.actor }}
  #          password: ${{ secrets.GITHUB_TOKEN }}
  #      - name: Publish backend container image
  #        run: docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_IMAGE_NAME }}:${{ env.CONTAINER_IMAGE_VERSION }}
  #      - name: Install cosign
  #        uses: sigstore/cosign-installer@9614fae9e5c5eddabb09f90a270fcb487c9f7149
  #      - name: Sign the published Docker image
  #        env:
  #          COSIGN_EXPERIMENTAL: "true"
  #        # This step uses the identity token to provision an ephemeral certificate
  #        # against the sigstore community Fulcio instance.
  #        run: cosign sign --yes ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_IMAGE_NAME }}:${{ env.CONTAINER_IMAGE_VERSION }}
  #      - name: Send status to Slack
  #        uses: digitalservicebund/notify-on-failure-gha@15dd05b628141b7bac0ad26e08c1935cb3ba6bc8 # v1.4.0
  #        if: ${{ failure() && github.ref == 'refs/heads/main' }}
  #        with:
  #          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #
  #  vs-code-deploy-staging:
  #    runs-on: ubuntu-latest
  #    #    if: ${{ github.ref == 'refs/heads/main' }}
  #    if: ${{ false }}
  #    concurrency: vs-code-deploy-staging
  #    environment: staging
  #    needs:
  #      - vscode-server-create-and-push-docker-image
  #    permissions:
  #      id-token: write # Enable OIDC for gitsign
  #    steps:
  #      - uses: chainguard-dev/actions/setup-gitsign@ac42db4c9c2e2bd9f66aadf3290c5995891d91a3
  #      - name: Deploy new images
  #        uses: digitalservicebund/github-actions/argocd-deploy@a223a68bc5982e5175beb73c708d99d8f9ba7858
  #        with:
  #          environment: staging
  #          version: ${{ env.CONTAINER_IMAGE_VERSION }}
  #          deploying_repo: ris-norms
  #          infra_repo: ris-norms-infra
  #          deploy_key: ${{ secrets.DEPLOY_KEY }}
  #          app: ris-norms-staging
  #          argocd_pipeline_password: ${{ secrets.ARGOCD_PIPELINE_PASSWORD }}
  #          argocd_server: ${{ secrets.ARGOCD_SERVER }}
  #      - name: Track deploy
  #        uses: digitalservicebund/github-actions/track-deployment@b51920b9fdeeb0c8721c210853aee955bd7cefc0
  #        with:
  #          project: ris-norms
  #          environment: staging
  #          metrics_deployment_webhook_url: ${{ secrets.METRICS_DEPLOYMENT_WEBHOOK_URL }}
  #          metrics_webhook_token: ${{ secrets.METRICS_WEBHOOK_TOKEN }}
  #      - name: Send status to Slack
  #        uses: digitalservicebund/notify-on-failure-gha@15dd05b628141b7bac0ad26e08c1935cb3ba6bc8 # v1.4.0
  #        if: ${{ failure() && github.ref == 'refs/heads/main' }}
  #        with:
  #          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
