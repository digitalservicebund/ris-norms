on:
  workflow_call:

jobs:
  check-style-vscode-extension:
    runs-on: ubuntu-latest
    steps:
      - name: What's dependabot's actor.name and actor.id
        run: |
          echo "GITHUB_ACTOR: $GITHUB_ACTOR"
          echo "GITHUB_ACTOR_ID: $GITHUB_ACTOR_ID"
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./vscode-extension/package.json
          cache: npm
          cache-dependency-path: ./vscode-extension/package-lock.json
      - name: Cache npm cache
        uses: actions/cache@v4
        id: cache-npm-cache
        with:
          # The docs discourage caching `node-modules`, cf. https://github.com/actions/cache/blob/main/examples.md#node---npm
          path: /home/runner/.npm
          key: npm-cache-${{ hashFiles('./vscode-extension/package-lock.json') }}
      - name: Install node modules
        run: npm ci
        working-directory: ./vscode-extension
      - name: Check style
        run: npm run style:check
        working-directory: ./vscode-extension
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@15dd05b628141b7bac0ad26e08c1935cb3ba6bc8 # v1.4.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  audit-licenses-vscode-extension:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./vscode-extension/package.json
          cache: npm
          cache-dependency-path: ./vscode-extension/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ./vscode-extension
      - name: Run license scanner
        run: npm run audit:licences
        working-directory: ./vscode-extension
      - name: Upload licence report
        uses: actions/upload-artifact@v4
        with:
          name: vscode-extension-licence-report.csv
          retention-days: 3
          path: vscode-extension/licence-report.csv
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@15dd05b628141b7bac0ad26e08c1935cb3ba6bc8 # v1.4.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  build-and-test-vscode-extension:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./vscode-extension/package.json
          cache: npm
          cache-dependency-path: ./vscode-extension/package-lock.json
      - name: Cache npm cache
        uses: actions/cache@v4
        id: cache-npm-cache
        with:
          # The docs discourage caching `node-modules`, cf. https://github.com/actions/cache/blob/main/examples.md#node---npm
          path: /home/runner/.npm
          key: npm-cache-${{ hashFiles('./vscode-extension/package-lock.json') }}
      - name: Install node modules
        run: npm ci
        working-directory: vscode-extension
      - name: Establish virtual display buffer
        run: |
          /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo "Xvfb started"
      - name: Run tests
        run: npm test
        working-directory: ./vscode-extension
        env:
          DISPLAY: ":99.0"
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@15dd05b628141b7bac0ad26e08c1935cb3ba6bc8 # v1.4.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  build-and-pack-vscode-extension:
    runs-on: ubuntu-latest
    needs: [check-style-vscode-extension, build-and-test-vscode-extension]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./vscode-extension/package.json
          cache: npm
          cache-dependency-path: ./vscode-extension/package-lock.json
      - name: Cache npm cache
        uses: actions/cache@v4
        id: cache-npm-cache
        with:
          # The docs discourage caching `node-modules`, cf. https://github.com/actions/cache/blob/main/examples.md#node---npm
          path: /home/runner/.npm
          key: npm-cache-${{ hashFiles('./vscode-extension/package-lock.json') }}
      - name: Install node modules
        run: npm ci
        working-directory: ./vscode-extension
      - name: Build + Pack Extension
        run: npm run vscode:pack
        working-directory: ./vscode-extension
      - name: Extract Extension Version (= release version)
        id: package_version
        run: echo "VERSION=$(node -p "require('./vscode-extension/package.json').version")" >> $GITHUB_ENV
      - name: Append GitHub Run Number to VSIX file
        run: mv ./vscode-extension/ris-norms-${{ env.VERSION }}.vsix ./vscode-extension/ris-norms-${{ env.VERSION }}-${{ github.run_number }}.vsix
      - name: Upload extension # the release will pick this up, later
        uses: actions/upload-artifact@v4
        with:
          name: vscode-extension-vsix
          retention-days: 1
          path: vscode-extension/*.vsix
      - name: Send status to Slack
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: digitalservicebund/notify-on-failure-gha@15dd05b628141b7bac0ad26e08c1935cb3ba6bc8 # v1.4.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  analyze-vscode-extension:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./vscode-extension/package.json
          cache: npm
          cache-dependency-path: ./vscode-extension/package-lock.json
      - name: Cache npm cache
        uses: actions/cache@v4
        id: cache-npm-cache
        with:
          # The docs discourage caching `node-modules`, cf. https://github.com/actions/cache/blob/main/examples.md#node---npm
          path: /home/runner/.npm
          key: npm-cache-${{ hashFiles('./vscode-extension/package-lock.json') }}
      - name: Install node modules
        run: npm ci
        working-directory: vscode-extension
      - name: Install SonarScanner
        uses: digitalservicebund/github-actions/setup-sonarscanner@7c3c5fd3b1467215f9e6c66181a37538607999b1
      - name: Establish virtual display buffer
        run: |
          /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo "Xvfb started"
      - name: Scan with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          DISPLAY: ":99.0"
        run: |
          npm run coverage
          sonar-scanner
        working-directory: ./vscode-extension
      - name: Check SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@d304d050d930b02a896b0f85935344f023928496
        with:
          scanMetadataReportFile: vscode-extension/.scannerwork/report-task.txt
        timeout-minutes: 3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@15dd05b628141b7bac0ad26e08c1935cb3ba6bc8 # v1.4.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
