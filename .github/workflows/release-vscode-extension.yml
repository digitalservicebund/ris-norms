name: Release VSCode Extension

on:
  push:
    paths:
      - "vscode-extension/**"

jobs:
  check-style-vscode-extension:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./vscode-extension/.node-version
          cache: npm
          cache-dependency-path: ./vscode-extension/package-lock.json
      - name: Cache node_modules
        uses: actions/cache@v3
        id: node-modules-cache
        with:
          path: ./vscode-extension/node_modules
          key: modules-${{ hashFiles('./vscode-extension/package-lock.json') }}
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: ./vscode-extension
      - name: Check style
        run: npm run style:check
        working-directory: ./vscode-extension
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@15dd05b628141b7bac0ad26e08c1935cb3ba6bc8 # v1.4.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  build-vscode-extension:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./vscode-extension/.node-version
          cache: npm
          cache-dependency-path: ./vscode-extension/package-lock.json
      - name: Extract Extension Version
        id: package_version
        run: echo "VERSION=$(node -p "require('./vscode-extension/package.json').version")" >> $GITHUB_ENV
      - name: Cache node_modules
        uses: actions/cache@v3
        id: node-modules-cache
        with:
          path: ./vscode-extension/node_modules
          key: modules-${{ hashFiles('./vscode-extension/package-lock.json') }}
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: ./vscode-extension
      - name: Build Extension
        run: npm run vscode:pack
        working-directory: ./vscode-extension
      - name: Upload VScode extension vsix file
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        uses: actions/upload-artifact@v3
        with:
          name: vscode-extension
          path: ./vscode-extension/*.vsix
      - name: Create and Upload GitHub Release for VSCode Extension
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        uses: softprops/action-gh-release@v1
        with:
          files: ./vscode-extension/*.vsix
          tag_name: v${{ env.VERSION }}-${{ github.run_number }}
          name: Normendokumentation VSCode Extenstion v${{ env.VERSION }}-${{ github.run_number }}
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@15dd05b628141b7bac0ad26e08c1935cb3ba6bc8 # v1.4.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  tests-vscode-extension:
    runs-on: ubuntu-latest
    needs: [check-style-vscode-extension, build-vscode-extension]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./vscode-extension/.node-version
          cache: npm
          cache-dependency-path: ./vscode-extension/package-lock.json
      - name: Cache node_modules
        uses: actions/cache@v3
        id: node-modules-cache
        with:
          path: ./vscode-extension/node_modules
          key: modules-${{ hashFiles('./vscode-extension/package-lock.json') }}
      - name: Establish virtual display buffer
        run: |
          /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo "Xvfb started"
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: ./vscode-extension
      - name: Run tests
        run: npm test
        working-directory: ./vscode-extension
        env:
          DISPLAY: ":99.0"
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@15dd05b628141b7bac0ad26e08c1935cb3ba6bc8 # v1.4.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  analyze-vscode-extension:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [tests-vscode-extension]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install SonarScanner
        uses: digitalservicebund/github-actions/setup-sonarscanner@7c3c5fd3b1467215f9e6c66181a37538607999b1
      - name: Establish virtual display buffer
        run: |
          /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo "Xvfb started"
      - name: Scan with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          DISPLAY: ":99.0"
        run: |
          npm install
          npm run coverage
          sonar-scanner
        working-directory: ./vscode-extension
      - name: Check SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@d304d050d930b02a896b0f85935344f023928496
        with:
          scanMetadataReportFile: vscode-extension/.scannerwork/report-task.txt
        timeout-minutes: 3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@15dd05b628141b7bac0ad26e08c1935cb3ba6bc8 # v1.4.0
        if: ${{ failure() }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
