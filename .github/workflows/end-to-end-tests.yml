on:
  workflow_call:
    inputs:
      browser:
        required: false
        type: string
        default: chromium

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@85cde3f5a1033b2adc2442631c24b530f1183a1a
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "21.0"
          distribution: "temurin"
          cache: gradle
      - name: Start PostgreSQL
        run: docker compose up --detach postgres14 redis
      - name: Start backend in the background (via .gradlew and nohup)
        run: nohup ./gradlew bootRun > /tmp/nohup.out &
        working-directory: ./backend
      - name: Wait for backend to start
        run: |
          while [ `grep -c 8080 /tmp/nohup.out` -lt 1 ] ;
          do
          echo "sleeping for 1 second"
          sleep 1
          done
        working-directory: ./backend
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/.node-version
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json
      - name: Cache npm cache
        uses: actions/cache@v4
        id: cache-npm-cache
        with:
          # The docs discourage caching `node-modules`, cf. https://github.com/actions/cache/blob/main/examples.md#node---npm
          path: /home/runner/.npm
          key: npm-cache-${{ hashFiles('./frontend/package-lock.json') }}
      - name: Install node modules
        run: npm ci
        working-directory: ./frontend
      - name: Get Playwright version
        working-directory: ./frontend
        run: echo "PLAYWRIGHT_VERSION=$(jq -r '.packages["node_modules/@playwright/test"].version' package-lock.json)" >> $GITHUB_ENV
      - name: Cache browser binaries
        id: cache-browser-binaries
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}-${{ inputs.browser }}
      - name: Install playwright browsers
        run: |
          npx --yes playwright install --with-deps ${{ inputs.browser }}
        working-directory: ./frontend
      - name: Run e2e tests in ${{ inputs.browser }} against localhost
        env:
          E2E_BASE_URL: "http://localhost:5173"
          TZ: 'Europe/Berlin'
        run: |
          echo "Running e2e tests 1 time"

          npm run dev &
          DEV_PID=$!
          npm run test:e2e -- --project ${{ inputs.browser }} --repeat-each 1
          pkill -P $DEV_PID
        working-directory: ./frontend
      - name: Upload screenshots and traces of failed tests
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: failed-e2e-tests-${{ inputs.browser }}
          path: |
            ./frontend/test-results/**/*.png
            ./frontend/test-results/**/trace.zip
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@15dd05b628141b7bac0ad26e08c1935cb3ba6bc8
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
