on:
  workflow_call:
    inputs:
      container-registry:
        required: true
        type: string
      container-image-name:
        required: true
        type: string
      container-image-version:
        required: true
        type: string

env:
  SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  check-style-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/package.json
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json
      - name: Cache npm cache
        uses: actions/cache@v4
        id: cache-npm-cache
        with:
          # The docs discourage caching `node-modules`, cf. https://github.com/actions/cache/blob/main/examples.md#node---npm
          path: /home/runner/.npm
          key: npm-cache-${{ hashFiles('./frontend/package-lock.json') }}
      - name: Install node modules
        run: npm ci
        working-directory: ./frontend
      - name: Check style
        run: npm run style:check
        working-directory: ./frontend
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/package.json
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json
      - name: Cache npm cache
        uses: actions/cache@v4
        id: cache-npm-cache
        with:
          # The docs discourage caching `node-modules`, cf. https://github.com/actions/cache/blob/main/examples.md#node---npm
          path: /home/runner/.npm
          key: npm-cache-${{ hashFiles('./frontend/package-lock.json') }}
      - name: Install node modules
        run: npm ci
        working-directory: ./frontend
      - name: Run tests
        run: npm run test
        working-directory: ./frontend
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  #  analyze-frontend-with-sonar-cube:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - uses: actions/checkout@v4
  #        with:
  #          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
  #      - name: Setup Node
  #        uses: actions/setup-node@v4
  #        with:
  #          node-version-file: ./frontend/package.json
  #          cache: npm
  #          cache-dependency-path: ./frontend/package-lock.json
  #      - name: Cache npm cache
  #        uses: actions/cache@v4
  #        id: cache-npm-cache
  #        with:
  #          # The docs discourage caching `node-modules`, cf. https://github.com/actions/cache/blob/main/examples.md#node---npm
  #          path: /home/runner/.npm
  #          key: npm-cache-${{ hashFiles('./frontend/package-lock.json') }}
  #      - name: Install node modules
  #        run: npm ci
  #        working-directory: ./frontend
  #      - name: Install SonarScanner
  #        uses: digitalservicebund/setup-sonarscanner@3ade23691f865c02dce6b46452947a0e7944196e # v1.0.0
  #      - name: Scan with SonarQube
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #        run: |
  #          npm run coverage
  #          sonar-scanner
  #        working-directory: ./frontend
  #      - name: Check SonarQube Quality Gate
  #        uses: sonarsource/sonarqube-quality-gate-action@424137db1fae80e9eb279829995166f2f44bc8df
  #        with:
  #          scanMetadataReportFile: frontend/.scannerwork/report-task.txt
  #        timeout-minutes: 3
  #        env:
  #          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #      - name: Send status to Slack
  #        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
  #        if: ${{ failure() && github.ref == 'refs/heads/main' }}
  #        with:
  #          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  audit-licenses-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/package.json
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json
      - name: Cache npm cache
        uses: actions/cache@v4
        id: cache-npm-cache
        with:
          # The docs discourage caching `node-modules`, cf. https://github.com/actions/cache/blob/main/examples.md#node---npm
          path: /home/runner/.npm
          key: npm-cache-${{ hashFiles('./frontend/package-lock.json') }}
      - name: Install node modules
        run: npm ci
        working-directory: ./frontend
      - name: Run license scanner
        run: npm run audit:licences
        working-directory: ./frontend
      - name: Upload licence report
        uses: actions/upload-artifact@v4
        with:
          name: licence-reports-frontend
          retention-days: 3
          path: frontend/frontend-licence-report.csv
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@66c485757701f8d5dbee32f24df38d904ca693ba
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
