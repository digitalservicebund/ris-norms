openapi: 3.0.0
info:
  title: RIS-Norms API
  version: 1.0.0
  description: API for managing norms and announcements

paths:
  /announcements:
    get:
      summary: Get a list of all announcements
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Norm'

  /announcements/{eli}/release:
    get:
      summary: Get the latest release of a specific announcement by the amending law eli
      parameters:
        - name: eli
          in: path
          required: true
          description: ELI of the amending law
          schema:
            type: string
      responses:
        '200':
          description: Information about a released an announcement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseResponse'
    put:
      summary: Release the XML of a specific announcement by the amending law eli
      parameters:
        - name: eli
          in: path
          required: true
          description: ELI of the amending law
          schema:
            type: string
      responses:
        '200':
          description: Successfully released an announcement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseResponse'

  /norms/{eli}:
    get:
      summary: Get a specific norm by eli
      parameters:
        - name: eli
          in: path
          required: true
          description: eli of the norm
          schema:
            type: string
        - name: showMetadata
          in: query
          schema:
            type: boolean
            default: false
          description: "Should the metadata table be included? (only for Content-Type: text/html)"
        - name: atIsoDate
          in: query
          schema:
            type: string
          description: "Passive modifications coming into affect before this date should be applied before rendering the HTML (only for Content-Type: text/html)"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Norm'
            application/xml:
              schema:
                $ref: '#/components/schemas/LegalDocML.de'
            text/html:
              schema:
                type: string
    put:
      summary: Update a specific norm by eli
      parameters:
        - name: eli
          in: path
          required: true
          description: eli of the norm
          schema:
            type: string
      requestBody:
        description: The XML of the norm (which may be updated and saved on DB)
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/LegalDocML.de'
      responses:
        '200':
          description: Successful response
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/LegalDocML.de'

  /norms/{eli}/elements:
    get:
      summary: Get a norm's elements, filtered by the elements' types
      parameters:
        - name: eli
          in: path
          required: true
          description: ELI of the norm
          example: "eli/bund/bgbl-1/2017/s419/2017-03-15/1/deu/regelungstext-1"
          schema:
            type: string
        - name: type
          in: query
          required: true
          description: Type(s) of elements to include in the result.
          schema:
            type: array
            items:
              type: string
              enum: [preface, preamble, article, conclusions]
        - name: amendedBy
          in: query
          required: false
          description: ELI of an amending law. The result is restricted to elements that are affected by that law. <br>Note that the validity of that ELI is not checked by this endpoint.
          schema:
            type: string
          example: "eli/bund/bgbl-1/2017/s815/1995-03-15/1/deu/regelungstext-1"
      responses:
        '200':
          description: Successful response returning list of elements. If none matched, the list is empty.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    eli:
                      type: string
                    title:
                      type: string
                    type:
                      type: string
                      enum: [preface, preamble, article, conclusions]
        '404':
          description: Norm could not be found by its ELI.


  /norms/{eli}/articles:
    get:
      summary: Get a list of articles for a specific norm by eli
      parameters:
        - name: eli
          in: path
          required: true
          description: ELI of the norm
          schema:
            type: string
        - name: refersTo
          in: query
          required: false
          description: "Filter by the article's `refersTo` literal (`refersToLiterals.einzelvorschrift` in the specification). Only for `Content-Type: text/html`"
          schema:
            type: string
        - name: amendedBy
          in: query
          required: false
          description: "Filter the articles to articles amended by the given norm. Must be the eli of the amending norm. Requires amendedAt. Only for `Content-Type: application/json`"
          schema:
            type: string
        - name: amendedAt
          in: query
          required: false
          description: "Filter the articles to articles amended at the given livecycle event. Must be the eid of the livecycle event. Requires amendedBy. Only for `Content-Type: application/json`"
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
            text/html:
              schema:
                type: string

  /norms/{eli}/articles/{eid}:
    get:
      summary: Get a specific article by eid for a given norm
      parameters:
        - name: eli
          in: path
          required: true
          description: ELI of the norm
          schema:
            type: string
        - name: eid
          in: path
          required: true
          description: EID of the article
          schema:
            type: string
        - name: atIsoDate
          in: query
          schema:
            type: string
          description: "Passive modifications coming into affect before this date should be applied before rendering the HTML (only for Content-Type: text/html)"
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
            text/html:
              schema:
                type: string

  /norms/{eli}/mods/{eid}:
    put:
      summary: Save an amending command and update ZF0
      parameters:
        - name: eli
          in: path
          required: true
          description: ELI of the norm
          schema:
            type: string
        - name: eid
          in: path
          required: true
          description: the eId of the akn:mod
          schema:
            type: string
      requestBody:
        description: The updated amending command
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Mod'
      responses:
        '200':
          description: Successful update
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/LegalDocML.de'
        '400':
          description: Bad Request
        '404':
          description: Norm not found

  /norms/{eli}/timeBoundaries:
    get:
      summary: Get all time boundaries for a given norm
      parameters:
        - name: eli
          in: path
          required: true
          description: ELI of the norm
          schema:
            type: string
      responses:
        '200':
          description: Successful response

          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeBoundary'
    put:
      summary: Update all time boundaries for a given norm
      parameters:
        - name: eli
          in: path
          required: true
          description: ELI of the norm
          schema:
            type: string
      requestBody:
        description: List of new time boundaries of a norm
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TimeBoundary'
      responses:
        '200':
          description: Successful update
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeBoundary'
        '400':
          description: Bad Request
        '404':
          description: Norm not found

  /norms/{eli}/preview:
    post:
      summary: Call time machine to generate preview of applied amending law
      parameters:
        - name: eli
          in: path
          required: true
          description: ELI identifier of the target law
          schema:
            type: string
      requestBody:
        description: The XML of the amending law (which may be updated and not saved on DB)
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/LegalDocML.de'
      responses:
        '200':
          description: Successful response with preview of amended law
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/LegalDocML.de'
            text/html:
              schema:
                type: string

  /renderings:
    post:
      summary: Create and return an HTML rendering of the provided LDML.de XML
      parameters:
        - in: query
          name: show_metadata
          schema:
            type: boolean
            default: true
          description: Should the metadata table be included?
      requestBody:
        description: The LDML.de XML
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/LegalDocML.de'
      responses:
        '200':
          description: HTML rendering the provided LDML.de XML
          content:
            text/html:
              schema:
                type: string

components:
  schemas:
    Norm:
      type: object
      properties:
        eli:
          type: string
        title:
          type: string
        shortTitle:
          type: string
        fna:
          type: string
        frbrName:
          type: string
        frbrNumber:
          type: string
        frbrDateVerkuendung:
          type: string
          format: date

    Article:
      type: object
      properties:
        eli:
          type: string
        enumeration:
          type: string
        title:
          type: string
        affectedDocumentEli:
          type: string
        affectedDocumentZf0Eli:
          type: string

    TimeBoundary:
      type: object
      properties:
        eventRefEid:
          type: string
        date:
          type: string
          format: date

    Mod:
      type: object
      properties:
        refersTo:
          type: string
        timeBoundaryEid:
          type: string
        destinationHref:
          type: string
        oldText:
          type: string
        newText:
          type: string

    ReleaseResponse:
      type: object
      properties:
        releaseAt:
          type: string
          format: date-time
        amendingLawEli:
          type: string
        zf0Elis:
          type: array
          items:
            type: string

    LegalDocML.de:
      type: object
      xml:
        name: akomaNtoso
        namespace: 'http://Inhaltsdaten.LegalDocML.de/1.6'
        prefix: akn
