openapi: 3.0.0
info:
  title: RIS-Norms API
  version: 1.0.0
  description: API for managing norms and announcements

paths:
  /announcements:
    get:
      summary: Get a list of all announcements
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Announcement'

  /announcements/{eli}/release:
    get:
      summary: Get the latest release of a specific announcement by the amending law eli
      parameters:
        - name: eli
          in: path
          required: true
          description: ELI of the amending law
          schema:
            type: string
      responses:
        '200':
          description: Information about a released an announcement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseResponse'
    put:
      summary: Release the XML of a specific announcement by the amending law eli
      parameters:
        - name: eli
          in: path
          required: true
          description: ELI of the amending law
          schema:
            type: string
      responses:
        '200':
          description: Successfully released an announcement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseResponse'

  /norms/{eli}/articles:
    get:
      summary: Get a list of articles for a specific norm by eli
      parameters:
        - name: eli
          in: path
          required: true
          description: ELI of the norm
          schema:
            type: string
        - name: refersTo
          in: query
          required: false
          description: Filter by the article's `refersTo` literal (`refersToLiterals.einzelvorschrift` in the specification).
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'

  /norms/{eli}/articles/{eid}:
    get:
      summary: Get a specific article by eid for a given norm
      parameters:
        - name: eli
          in: path
          required: true
          description: ELI of the norm
          schema:
            type: string
        - name: eid
          in: path
          required: true
          description: EID of the article
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'

  /norms/{eli}:
    get:
      summary: Get a specific norm by eli
      parameters:
        - name: eli
          in: path
          required: true
          description: eli of the norm
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Norm'
            application/xml:
              schema:
                $ref: '#/components/schemas/LegalDocML.de'
            text/html:
              schema:
                type: string
    put:
      summary: Update a specific norm by eli
      parameters:
        - name: eli
          in: path
          required: true
          description: eli of the norm
          schema:
            type: string
      requestBody:
        description: The XML of the norm (which may be updated and saved on DB)
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/LegalDocML.de'
      responses:
        '200':
          description: Successful response
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/LegalDocML.de'

  /norms/{eli}/preview:
    post:
      summary: Call time machine to generate preview of applied amending law
      parameters:
        - name: eli
          in: path
          required: true
          description: ELI identifier of the target law
          schema:
            type: string
      requestBody:
        description: The XML of the amending law (which may be updated and not saved on DB)
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/LegalDocML.de'
      responses:
        '200':
          description: Successful response with preview of amended law
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/LegalDocML.de'
            text/html:
              schema:
                type: string

  /renderings:
    post:
      summary: Create and return an HTML rendering of the provided LDML.de XML
      parameters:
        - in: query
          name: show_metadata
          schema:
            type: boolean
            default: true
          description: Should the metadata table be included?
      requestBody:
        description: The LDML.de XML
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/LegalDocML.de'
      responses:
        '200':
          description: HTML rendering the provided LDML.de XML
          content:
            text/html:
              schema:
                type: string

components:
  schemas:
    Announcement:
      type: object
      properties:
        eli:
          type: string
        title:
          type: string
        printAnnouncementGazette:
          type: string
        digitalAnnouncementMedium:
          type: string
        publicationDate:
          type: string
          format: date
        printAnnouncementPage:
          type: integer
        digitalAnnouncementEdition:
          type: integer

    Norm:
      type: object
      properties:
        eli:
          type: string
        title:
          type: string
        frbrName:
          type: string
        frbrNumber:
          type: string
        printAnnouncementGazette:
          type: string
          deprecated: true
        digitalAnnouncementMedium:
          type: string
          deprecated: true
        publicationDate:
          type: string
          format: date
        printAnnouncementPage:
          type: string
          deprecated: true
        digitalAnnouncementEdition:
          type: string
          deprecated: true

    Article:
      type: object
      properties:
        eli:
          type: string
        enumeration:
          type: string
        title:
          type: string
        affectedDocumentEli:
          type: string

    ReleaseResponse:
      type: object
      properties:
        releaseAt:
          type: string
          format: date-time
        eliAmendingLaw:
          type: string
        eliTargetLawZF0:
          type: array
          items:
            type: object
            properties:
              eli:
                type: string

    LegalDocML.de:
      type: object
      xml:
        name: akomaNtoso
        namespace: 'http://Inhaltsdaten.LegalDocML.de/1.6'
        prefix: akn
