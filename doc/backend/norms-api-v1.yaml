openapi: 3.0.0
info:
  title: RIS-Norms API
  version: 1.0.0
  description: API for managing norms and announcements

paths:
  /announcements:
    get:
      tags:
        - Announcements
      summary: Get a list of all announcements
      responses:
        "200":
          description: List of announcements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Verkuendung"
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      tags:
        - Announcements
      summary: Create a new announcement by uploading the XML of a norm
      parameters:
        - name: force
          in: query
          schema:
            type: boolean
            default: false
          description: "If norm already exists, override it"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: Norm was successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Norm"
        "422":
          $ref: "#/components/responses/ValidationError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /{expressionEli}/releases:
    get:
      summary: Get the releases of a specific norm expression
      parameters:
        - name: expressionEli
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/NormExpressionEli"
      responses:
        "200":
          description: Information about releases
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReleaseResponse"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      summary: Release the norm expression
      parameters:
        - name: expressionEli
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/NormExpressionEli"
      responses:
        "200":
          description: Successfully released the norm
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseResponse"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /norms/{expressionEli}:
    get:
      tags:
        - Norm expression
      summary: Get a specific norm by its expression ELI
      parameters:
        - name: expressionEli
          in: path
          required: true
          description: Expression ELI of the norm
          schema:
            $ref: "#/components/schemas/DokumentExpressionEli"
        - name: showMetadata
          in: query
          schema:
            type: boolean
            default: false
          description: "Should the metadata table be included? (only for Content-Type: text/html)"
      responses:
        "200":
          description: Expression of the requested norm
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Norm"
            application/xml:
              schema:
                $ref: "#/components/schemas/LegalDocML.de"
            text/html:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      tags:
        - Norm expression
      summary: Update a specific norm by its expression ELI
      parameters:
        - name: expressionEli
          in: path
          required: true
          description: Expression ELI of the norm
          schema:
            $ref: "#/components/schemas/DokumentExpressionEli"
      requestBody:
        description: The XML of the norm (which may be updated and saved on DB)
        required: true
        content:
          application/xml:
            schema:
              $ref: "#/components/schemas/LegalDocML.de"
      responses:
        "200":
          description: Updated expression of the norm
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/LegalDocML.de"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /norms/{expressionEli}/elements/{eid}:
    get:
      tags:
        - Norm expression
      summary: Get a single element inside a norm
      parameters:
        - name: expressionEli
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/DokumentExpressionEli"
        - name: eid
          in: path
          required: true
          description: eId of the element inside the norm
          example: "hauptteil-1_art-3"
          schema:
            type: string
      responses:
        "200":
          description: "The element inside the norm"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ElementResponse"
            text/html:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /norms/{expressionEli}/articles:
    get:
      tags:
        - Norm expression
      summary: Get a list of articles for a specific norm by its expression ELI
      parameters:
        - name: expressionEli
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/DokumentExpressionEli"
        - name: refersTo
          in: query
          required: false
          description: "Filter by the article's `refersTo` literal (`refersToLiterals.einzelvorschrift` in the specification). Only for `Content-Type: text/html`"
          schema:
            type: string
      responses:
        "200":
          description: The list of articles in the requested norm
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Article"
            text/html:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /norms/{expressionEli}/articles/{eid}:
    get:
      tags:
        - Norm expression
      summary: Get a specific article by eId for a given norm
      parameters:
        - name: expressionEli
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/DokumentExpressionEli"
        - name: eid
          in: path
          required: true
          description: eId of the article
          schema:
            type: string
      responses:
        "200":
          description: The article with the requested eId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
            text/html:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /norms/{expressionEli}/timeBoundaries:
    get:
      tags:
        - Norm expression
      summary: Get all time boundaries for a given norm
      parameters:
        - name: expressionEli
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/DokumentExpressionEli"
      responses:
        "200":
          description: List of time boundaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TimeBoundary"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      tags:
        - Norm expression
      summary: Update all time boundaries for a given norm
      parameters:
        - name: expressionEli
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/DokumentExpressionEli"
      requestBody:
        description: List of new time boundaries of a norm
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/TimeBoundary"
      responses:
        "200":
          description: Updated time boundaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TimeBoundary"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /norms/{dokumentExpressionEli}/proprietary:
    get:
      tags:
        - Dokument expression
      summary: Get the proprietary metadata of Dokument
      parameters:
        - name: dokumentExpressionEli
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/DokumentExpressionEli"
      responses:
        "200":
          description: List of proprietary metadata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleElementMetadata"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: Replace the proprietary metadata of a Dokument
      tags:
        - Dokument expression
      parameters:
        - name: dokumentExpressionEli
          in: path
          required: false
          schema:
            $ref: "#/components/schemas/DokumentExpressionEli"
      requestBody:
        description: The proprietary request schema containing several metadata.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SingleElementMetadata"
      responses:
        "200":
          description: Metadata was updated successfully. Returns the updated metadata.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SingleElementMetadata"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /norms/{dokumentExpressionEli}/proprietary/{eid}:
    get:
      tags:
        - Dokument expression
      summary: Get the proprietary metadata of a single element
      parameters:
        - name: dokumentExpressionEli
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/DokumentExpressionEli"
        - name: eid
          in: path
          required: true
          description: The eId of the selected single element
          schema:
            type: string
      responses:
        "200":
          description: List of proprietary metadata for the single element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleElementMetadata"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: Replace the proprietary metadata of a single element
      tags:
        - Dokument expression
      parameters:
        - name: dokumentExpressionEli
          in: path
          required: false
          schema:
            $ref: "#/components/schemas/DokumentExpressionEli"
        - name: eid
          in: path
          required: true
          description: The eId of the selected single element
          schema:
            type: string
      requestBody:
        description: The proprietary request schema containing several metadata.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SingleElementMetadata"
      responses:
        "200":
          description: Metadata for a single element was updated successfully. Returns the updated metadata.
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/SingleElementMetadata"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /norms/{expressionEli}/{eid}:
    get:
      tags:
        - Norm expression
      summary: Get an element of a norm by its eId (currently only in HTML preview format)
      parameters:
        - name: expressionEli
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/DokumentExpressionEli"
        - name: eid
          in: path
          required: true
          description: eId of the element in the norm
          schema:
            type: string
            example: hauptteil-1_art-3
      responses:
        "200":
          description: An HTML rendering of the element
          content:
            text/html:
              schema:
                type: string
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /norms/{manifestationEli}:
    get:
      tags:
        - Norm manifestation
      summary: Get a specific norm by its manifestation ELI
      parameters:
        - name: manifestationEli
          in: path
          required: true
          description: Manifestation ELI of the norm. Currently only `xml` is supported as the format.
          schema:
            $ref: "#/components/schemas/DokumentManifestationEli"
      responses:
        "200":
          description: The requested norm. The response format depends on the format as specified in the manifestation ELI.
          content:
            "application/xml":
              schema:
                $ref: "#/components/schemas/LegalDocML.de"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /renderings:
    post:
      tags:
        - Rendering
      summary: Create and return an HTML rendering of the provided LDML.de XML
      parameters:
        - in: query
          name: showMetadata
          schema:
            type: boolean
            default: false
          description: Should the metadata table be included?
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              description: The xml of the norm which should be rendered
              type: string
              format: LegalDocML.de XML
      responses:
        "200":
          description: HTML rendering the provided LDML.de XML
          content:
            text/html:
              schema:
                type: string
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /environment:
    get:
      summary: Return configuration for the frontend specific to the current environment
      responses:
        "200":
          description: Configuration for the frontend specific to the current environment
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  authClientId:
                    type: string
                  authRealm:
                    type: string
                  authUrl:
                    type: string

  /norms/{dokumentExpressionEli}/toc:
    get:
      tags:
        - Dokument expression
      summary: Retrieve the table of contents of a Regelungstext
      parameters:
        - name: dokumentExpressionEli
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/DokumentExpressionEli"
      responses:
        "200":
          description: Table of contents successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TableOfContentsResponse"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

components:
  schemas:
    DokumentExpressionEli:
      type: string
      format: DokumentExpressionEli
      example: eli/bund/bgbl-1/2021/s4/2021-03-01/1/deu/regelungstext-1
      description: ELI identifying a specific Dokument of a specific expression of a norm

    DokumentManifestationEli:
      type: string
      format: DokumentManifestationEli
      example: eli/bund/bgbl-1/2021/s4/2021-03-01/1/deu/2024-02-01/regelungstext-1.xml
      description: ELI identifying a specific Dokument of a specific manifestation of a norm

    NormExpressionEli:
      type: string
      format: NormExpressionEli
      example: eli/bund/bgbl-1/2021/s4/2021-03-01/1/deu
      description: ELI identifying a specific expression of a norm

    Norm:
      type: object
      properties:
        eli:
          $ref: "#/components/schemas/DokumentExpressionEli"
        title:
          type: string
        shortTitle:
          type: string
        fna:
          type: string
        frbrName:
          type: string
        frbrNumber:
          type: string
        frbrDateVerkuendung:
          type: string
          format: date

    Verkuendung:
      type: object
      properties:
        eli:
          $ref: "#/components/schemas/DokumentExpressionEli"
        title:
          type: string
        shortTitle:
          type: string
        fna:
          type: string
        frbrName:
          type: string
        frbrNumber:
          type: string
        frbrDateVerkuendung:
          type: string
          format: date
        importTimestamp:
          type: string
          format: date

    Article:
      type: object
      properties:
        eid:
          type: string
        enumeration:
          type: string
        title:
          type: string

    TimeBoundary:
      type: object
      properties:
        eventRefEid:
          type: string
        date:
          type: string
          format: date
        temporalGroupEid:
          type: string

    ReleaseResponse:
      type: object
      properties:
        releaseAt:
          type: string
          format: date-time
        norms:
          type: array
          items:
            $ref: "#/components/schemas/DokumentManifestationEli"

    LegalDocML.de:
      type: object
      xml:
        name: akomaNtoso
        namespace: "http://Inhaltsdaten.LegalDocML.de/1.7.2"
        prefix: akn

    ElementResponse:
      type: object
      properties:
        eli:
          type: string
        title:
          type: string
        type:
          type: string
          enum:
            [
              preface,
              preamble,
              article,
              conclusions,
              book,
              chapter,
              part,
              section,
              subsection,
              title,
              subtitle,
            ]

    Metadata:
      type: object
      properties:
        fna:
          type: string
          description: FNA (Fundstellennachweis A) of the norm
        art:
          type: string
          description: Art ("Art der Norm") of the norm
        typ:
          type: string
          description: Type ("Typ") of the document
        subtyp:
          type: string
          description: Subtype ("Subtyp") of the document
        bezeichnungInVorlage:
          type: string
          description: Designation according to specification ("Bezeichnung gemäß Vorlage") of the document
        artDerNorm:
          type: string
          description: SN,ÄN,ÜN ("Art der Norm") of the norm
        staat:
          type: string
          description: DEU,DDR,BW... ("Staat, Land, Stadt, Landkreis oder juristische Person, deren Hoheitsgewalt oder Rechtsmacht die Norm trägt") of the norm
        beschliessendesOrgan:
          type: string
          description: ("Beschließendes Organ") of the norm
        qualifizierteMehrheit:
          type: boolean
          description: Boolean value if beschliessendesOrgan had a ("Qualifizierte Mehrheit") when deciding
        organisationsEinheit:
          type: string
          description: ("Organisationseinheit") of the norm

    SingleElementMetadata:
      type: object
      properties:
        artDerNorm:
          type: string
          description: SN or ÄN or ÜN ("Art der Norm") of the single element

    ProblemDetail:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          format: uri
          description: "A URI reference that identifies the problem type."
          example: "/errors/norm-not-found"
        title:
          type: string
          description: "A short, human-readable summary of the problem type."
          example: "Norm not found"
        status:
          type: integer
          format: int32
          description: "The HTTP status code generated by the origin server for this occurrence of the problem."
          example: 404
        detail:
          type: string
          description: "A human-readable explanation specific to this occurrence of the problem."
          example: "Norm with eli this-is-not-an-eli does not exist"
        instance:
          type: string
          format: uri
          description: "The api call URI that triggered the exception."
          example: "/api/v1/norms/this-is-not-an-eli"
        extensions:
          type: object
          additionalProperties: true
          description: "Optional additional fields to convey extra information."

    TableOfContentsResponse:
      type: object
      properties:
        id:
          type: string
          description: The eId of the XML node
        marker:
          type: string
          description: The marker of the item (e.g. § 1)
        heading:
          type: string
          description: The heading of the item, if present
        type:
          type: string
          description: The type of the item (e.g. section or chapter)
        children:
          type: array
          description: Nested children elements of the table of contents
          items:
            $ref: "#/components/schemas/TableOfContentsResponse"

  responses:
    NotFound:
      description: One or more resource(s) not found
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ProblemDetail"

    InternalServerError:
      description: Internal server error
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ProblemDetail"

    BadRequest:
      description: Malformed request (e.g. required parameters are missing or in the wrong format)
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ProblemDetail"

    ValidationError:
      description: Input data is invalid
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/ProblemDetail"
