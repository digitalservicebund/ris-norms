server {
    listen       8080;
    server_name  localhost;

    # proxy_set_header Host $http_host --> to preserve the HTTP host header so that Spring Security correctly resolve the external URL, ensuring the redirect URI matches what the OAuth2 provider (Bare.ID) expects.
    location ~ /(.+)\.[^\/]+ {
        proxy_pass "http://webapp:8080";
        proxy_set_header Host $http_host;
    }

    location /api {
        proxy_pass "http://webapp:8080";
        proxy_set_header Host $http_host;
    }

    location / {
        proxy_pass "http://webapp:8080";
        proxy_set_header Host $http_host;
    }
}
